version: "3"
services:
    # Define an InfluxDB service
    database-timeseries:
        image: influxdb:1.3.5
        volumes:
            - ./docker/database/timeseries:/var/lib/influxdb
        ports:
            - "8086:8086"


    # Define a Telegraf service
    database-timeseries-telegraf:
        image: telegraf:1.4.0
        volumes:
            - ./docker/configuration/telegraf.conf:/etc/telegraf/telegraf.conf:ro
        links:
            - database-timeseries
        ports:
            - "8092:8092/udp"
            - "8094:8094"
            - "8125:8125/udp"
        depends_on:
            - database-timeseries


    # Define a Chronograf service
    database-timeseries-chronograf:
        image: chronograf:1.3.8
        environment:
            INFLUXDB_URL: http://database-timeseries:8086
            KAPACITOR_URL: http://database-timeseries-kapacitor:9092
        links:
            - database-timeseries
            - database-timeseries-kapacitor
        ports:
            - "8888:8888"
        depends_on:
            - database-timeseries


    # Define a Kapacitor service
    database-timeseries-kapacitor:
        image: kapacitor:1.3.3
        environment:
            KAPACITOR_HOSTNAME: database-timeseries-kapacitor
            KAPACITOR_INFLUXDB_0_URLS_0: http://database-timeseries:8086
        links:
            - database-timeseries
        ports:
            - "9092:9092"
        depends_on:
            - database-timeseries


    # Define a service for using the influx CLI tool.
    # docker-compose run influxdb-cli
    # database-timeseries-cli:
    #     image: influxdb:1.3.5
    #     entrypoint:
    #         - influx
    #         - host
    #         - influxdb
    #     links:
    #         - database-timeseries


    # Define a service for using the kapacitor CLI tool.
    # docker-compose run kapacitor-cli
    # database-timeseries-kapacitor-cli:
    #     image: kapacitor:1.3.3
    #     entrypoint: bash
    #     environment:
    #         KAPACITOR_URL: http://database-timeseries-kapacitor:9092
    #     links:
    #         - database-timeseries-kapacitor


    # Relational POSTGRES database to store price metadata other
    # data on the site that needs to be persisted
    database-relational:
        image: postgres
        environment:
            POSTGRES_PASSWORD: posty
            POSTGRES_USER: posty
            POSTGRES_DB: blockstreet
        ports:
            - 5432:5432


    # Administration interface to explore the relational database data
    database-relational-explorer:
        image: adminer
        ports:
            - 8080:8080
        depends_on:
            - database-relational


    # RESTful API that services data to the front-end application
    blockstreet-api:
        build: .
        environment:
            NODE_ENV: docker
        links:
            - database-relational
            - database-timeseries
        ports:
            - "4000:4000"
        depends_on:
            - database-relational
            - database-timeseries
